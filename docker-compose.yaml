# version: '3'

services:
  express_api:
    container_name: express_api
    build: ./app
    restart: always
    volumes:
      - ./app:/app/
    expose:
      - 5000
    ports:
      - "5000:5000"
    env_file:
      - ./app/.env
    depends_on:
      - mysql_db
    networks:
      - asgard
      - monitoring

  mysql_db:
    container_name: mysql_db
    image: mysql
    restart: always
    expose:
      - 3306
    env_file:
      - ./app/.env
    volumes:
      - ./data/mysql/src:/var/lib/mysql
    networks:
      - asgard

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - 8082:80
    env_file:
      - ./app/.env
    depends_on:
      - mysql_db
    networks:
      - asgard


  # ====> Monitoring <====

  grafana:
    image: grafana/grafana-enterprise
    ports:
      - "3030:3000"
    user: root
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./data/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./data/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - monitoring
  
  prometheus:
    image: prom/prometheus
    user: root
    volumes:
      # - prometheus_data:/prometheus
      - ./data/prometheus:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9091:9090"
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - monitoring



networks:
  asgard:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}
